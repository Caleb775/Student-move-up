#!/usr/bin/env bash

# Student Records App - Production Deployment Script
# This script handles the complete deployment process

set -e  # Exit on any error

echo "ðŸš€ Starting Student Records App Deployment"
echo "=========================================="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if we're in the right directory
if [ ! -f "Gemfile" ] || [ ! -f "config/application.rb" ]; then
    print_error "This doesn't appear to be a Rails application directory"
    exit 1
fi

# Check if required environment variables are set
print_status "Checking environment variables..."

required_vars=("RAILS_ENV" "DATABASE_URL" "RAILS_MASTER_KEY")
missing_vars=()

for var in "${required_vars[@]}"; do
    if [ -z "${!var}" ]; then
        missing_vars+=("$var")
    fi
done

if [ ${#missing_vars[@]} -ne 0 ]; then
    print_error "Missing required environment variables:"
    for var in "${missing_vars[@]}"; do
        echo "  - $var"
    done
    print_error "Please set these environment variables before deploying"
    exit 1
fi

print_success "Environment variables check passed"

# Install dependencies
print_status "Installing dependencies..."
bundle install --deployment --without development test
print_success "Dependencies installed"

# Precompile assets
print_status "Precompiling assets..."
RAILS_ENV=production bundle exec rails assets:precompile
print_success "Assets precompiled"

# Run database migrations
print_status "Running database migrations..."
RAILS_ENV=production bundle exec rails db:migrate
print_success "Database migrations completed"

# Seed database if needed
if [ "$SEED_DATABASE" = "true" ]; then
    print_status "Seeding database..."
    RAILS_ENV=production bundle exec rails db:seed
    print_success "Database seeded"
fi

# Create necessary directories
print_status "Creating necessary directories..."
mkdir -p tmp/pids
mkdir -p log
mkdir -p storage
print_success "Directories created"

# Set proper permissions
print_status "Setting file permissions..."
chmod -R 755 public/
chmod -R 755 tmp/
chmod -R 755 log/
chmod -R 755 storage/
print_success "Permissions set"

# Health check
print_status "Performing health check..."
if RAILS_ENV=production bundle exec rails runner "puts 'Health check passed'" > /dev/null 2>&1; then
    print_success "Health check passed"
else
    print_error "Health check failed"
    exit 1
fi

# Restart application server (if using systemd)
if command -v systemctl > /dev/null 2>&1; then
    print_status "Restarting application service..."
    sudo systemctl restart student-records-app || print_warning "Could not restart service (may not be configured)"
fi

print_success "Deployment completed successfully!"
echo ""
echo "ðŸŽ‰ Student Records App is now deployed and ready!"
echo ""
echo "Next steps:"
echo "1. Verify the application is running: curl -f http://localhost:3000/up"
echo "2. Check application logs: tail -f log/production.log"
echo "3. Monitor application performance"
echo ""
echo "=========================================="
